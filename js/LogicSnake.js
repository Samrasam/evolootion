/**
 * @author Robert Donderer
 */

var LogicSnake = new Class({
	/////////////////////////////////////////////////////////////////////////////
	// constructor
	/////////////////////////////////////////////////////////////////////////////
	initialize : function() {

		// da die Snake sich nicht auf der selben Position befinden soll wie die
		// Maus, sondern dieser immer nur folgen soll:
		this.moveDelay = function() {
			
			this.x = posX;
			this.y = posY;
			this.scale = scale;
			this.dx = 0 - oldX;
			this.dy = 0 - oldY;
			
			// fuer die boundingBox mal!
			//this.bBox = bBox;
			
			this.transform("t" + ((this.x + this.dx) / 10 ) + "," + (this.y + this.dy) + "s" + this.scale);	
		};

	},
	
	/////////////////////////////////////////////////////////////////////////////
	// methods
	/////////////////////////////////////////////////////////////////////////////
	
	createHead : function(){
		
		this.snakeHead = paper
				.path(
						"m 31.96875,18.40625 -28.9375,34.28125 30.375,28.90625 63.5625,-31.0625 -65,-32.125 z M 50,40 c 5.522848,0 10,4.47713 10,10 0,5.5228 -4.477152,10 -10,10 -5.522847,0 -10,-4.4772 -10,-10 0,-5.52287 4.477153,-10 10,-10 z")
				.attr({
					fill : '#123',
					stroke : '#000',
					'stroke-width' : 1
				});
		},
	
	createBody : function() {
		// angemalter Pfad eines Koerperteils
		var snakeBody = paper
				.path(
						"m 391.84812,225.75459 c -0.62141,1.63999 -1.24281,3.27998 -1.86421,4.91997 -3.51523,-0.23393 -7.06985,0.1928 -10.43572,1.23002 -0.96734,-1.49905 -1.93467,-2.9981 -2.90201,-4.49716 -2.25753,1.14088 -5.82876,3.28319 -7.84443,5.01936 0.49584,1.41368 1.2755,2.63816 1.77134,4.05184 -2.50766,1.69921 -5.70336,4.87925 -7.52911,7.32519 -1.56465,-0.48144 -3.1293,-0.96286 -4.69394,-1.44429 -1.13829,2.52555 -2.40664,5.82012 -2.98092,8.42409 1.43568,0.84991 2.87134,1.69983 4.30701,2.54975 -1.21039,3.17155 -0.0829,7.46454 -1.05119,10.10449 -1.52662,0.64853 -3.05325,1.29706 -4.57987,1.94559 0.4867,2.94199 1.37348,5.81407 2.59451,8.53307 1.82577,-0.30109 3.65154,-0.60219 5.47731,-0.90328 1.06226,3.15059 4.61997,5.6831 5.50289,8.29877 -0.73883,1.44903 -1.47767,2.89806 -2.2165,4.34709 2.30994,1.60332 5.32325,4.80033 7.87214,4.50053 1.04671,-1.2183 2.09342,-2.43661 3.14013,-3.65491 2.8137,1.74295 7.12729,1.46835 9.47061,2.92734 0.35373,1.52905 0.70747,3.05809 1.0612,4.58715 2.81229,-0.2209 7.18671,0.31496 8.96231,-1.53922 0.017,-1.53692 0.0341,-3.07383 0.0512,-4.61074 3.35498,-0.48915 6.56296,-3.43163 9.35958,-3.86016 1.21074,0.91516 2.42147,1.83032 3.63221,2.74547 2.00812,-1.94923 5.72666,-4.30748 5.90051,-6.84858 -0.93543,-1.15088 -1.87085,-2.30175 -2.80628,-3.45263 2.36422,-2.56617 2.92848,-7.02209 4.82481,-9.2367 1.47952,-0.0794 2.95905,-0.15873 4.43857,-0.23809 0.29103,-2.76728 1.64867,-6.94538 0.16204,-8.9864 -1.43775,-0.27169 -2.87551,-0.5434 -4.31326,-0.8151 -0.15736,-3.5226 -1.60538,-7.1043 -2.64568,-10.20199 1.17658,-1.0965 2.35315,-2.19299 3.52973,-3.28949 -1.55033,-2.27293 -3.16055,-6.34308 -5.59734,-6.92408 -1.30529,0.7321 -2.61059,1.4642 -3.91588,2.1963 -2.23504,-2.87075 -6.70597,-4.21264 -8.71224,-6.47411 0.18785,-1.52553 0.3757,-3.05107 0.56354,-4.5766 -2.73702,-1.07745 -5.61189,-1.80556 -8.53307,-2.15249 z m -4.11279,12.87648 c 9.73338,-0.3124 19.03915,6.94188 20.98869,16.50531 2.44497,9.88123 -3.45417,20.90295 -13.02199,24.36673 -9.1691,3.72846 -20.56042,-0.13895 -25.60937,-8.64273 -5.07644,-7.95205 -3.81489,-19.16403 2.85561,-25.82346 3.84813,-3.95441 9.26677,-6.30955 14.78706,-6.40585 z")
				.attr({
					fill : '#123',
					stroke : '#000',
					'stroke-width' : 1
				});
			this.bodys.push(snakeBody);
	},
	
	snakeMovement : function() {
		dragSegment(0, mouseX, mouseY);
		var i;
		  for(i = 0; i < x.length-1; i++) {
		    dragSegment(i+1, x[i], y[i]);
		  }
	},
	
	dragSegment : function(i, xin, yin) {
		  dx = xin - x[i];
		  dy = yin - y[i];
		  angle = atan2(dy, dx);  
		  x[i] = xin - cos(angle) * segLength;
		  y[i] = yin - sin(angle) * segLength;
		  //stroke(23, 79, 4, 220);
		  
		  pushMatrix();
		  translate(x[i], y[i]);
		  rotate(angle);
		  
		  if ( i == x.length - 1 )
		  {
		    fill( c );
		    noStroke();
		    beginShape(TRIANGLES);
		    vertex(0, 5);
		    vertex(-2 * segLength, 0);
		    vertex(0, -5);
		    endShape();
		  }
		  
		  if ( i == 0 )
		  {
		   // stroke(0, 255);
		   noStroke();
		   fill(0, 255);
		   ellipse(segLength, -2, 3, 3);
		   ellipse(segLength, 2, 3, 3);
		    //point(segLength, -2);
		    //point(segLength, 2);
		  }
		  
		  popMatrix();
		}
});